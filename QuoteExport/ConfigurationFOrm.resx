<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAIAAAAQAAAAKAAAADYAAAA4AAAAOAAAADgAAAA4AAAAOAAAADgAAAA4AAAAOAAA
        ADgAAAA4AAAAOAAAADgAAAA4AAAAOAAAADgAAAA4AAAAOAAAADgAAAA4AAAAOAAAADYAAAAoAAAAEAAA
        AAIAAAAAAAAAAAAAAAAAAAAAAAAABgAAACYcPFO7JE1p+SRNafkkTWn5JE1p+SRNafkkTWn5JE1p+SRN
        afkkTWn5JE1p+SRNafkkTWn5JE1p+SRNafkkTWn5JE1p+SRNafkkTWn5JE1p+SRNafkkTWn5JE1p+Rw8
        U7sAAAAmAAAABgAAAAAAAAAAAAAAAAAAAAAAAAAGAAAAJiRNavdRjrL/TX6k/01+pP9NfqT/TX6k/01+
        pP9NfqT/TX6k/01+pP9NfqT/TX6k/01+pP9NfqT/TX6k/01+pP9NfqT/TX6k/01+pP9NfqT/TX6k/01+
        pP9RjrL/JE1q9wAAACYAAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAQJk9s9VGOsv9NfqT/TX6k/01+
        pP9NfqT/TX6k/01+pP9NfqT/TX6k/01+pP9NfqT/TX6k/01+pP9NfqT/TX6k/01+pP9NfqT/TX6k/01+
        pP9NfqT/TX6k/1GOsv8mT2z1AAAAEAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAInUW7zUY6y/01+
        pP/t7e3/6enp/+np6f/p6en/6enp/+np6f/p6en/6enp/+np6f/p6en/6enp/+np6f/p6en/6enp/+np
        6f/p6en/6enp/+3t7f9NfqT/UY6y/ydRbvMAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAChS
        b/NRjrL/TX6k/+7u7v/q6ur/6urq/+rq6v/q6ur/6urq/+rq6v/q6ur/6urq/+rq6v/q6ur/6urq/+rq
        6v/q6ur/6urq/+rq6v/q6ur/7u7u/01+pP9RjrL/KFJv8wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAKVNx81GOsv9NfqT/7u7u/+rq6v/q6ur/0s+//5eMWP/i4d3/6urq/+rq6v/q6ur/6urq/+rq
        6v/q6ur/6urq/+rq6v/q6ur/6urq/+rq6v/u7u7/TX6k/1GOsv8pU3HzAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAqVHLzUY6y/01+pP/v7+//6+vr/9PPwP+Edjb/kYVN/6Sbb//r6+v/6+vr/+vr
        6/9rf4b/a3+G/2t/hv9rf4b/a3+G/2t/hv9rf4b/6+vr/+/v7/9NfqT/UY6y/ypUcvMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAACtWc/NRjrL/TX6k//Dw8P/s7Oz/uLGR/9HNvP/o6OX/lYlU/7Kq
        hv/s7Oz/7Ozs/+zs7P/s7Oz/7Ozs/+zs7P/s7Oz/7Ozs/+zs7P/s7Oz/8PDw/01+pP9RjrL/K1Zz8wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALFd081GOsv9NfqT/8fHx/+3t7f/t7e3/7e3t/+3t
        7f/k493/l4tW/+3t7f/t7e3/a3+G/2t/hv9rf4b/a3+G/2t/hv9rf4b/a3+G/+3t7f/x8fH/TX6k/1GO
        sv8sV3TzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuWHbzUY6y/01+pP/x8fH/7e3t/+3t
        7f/t7e3/7e3t/+3t7f/l5N//7e3t/+3t7f/t7e3/7e3t/+3t7f/t7e3/7e3t/+3t7f/t7e3/7e3t//Hx
        8f9NfqT/UY6y/y5YdvMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC9ad/NRjrL/TX6k//Hx
        8f/u7u7/7u7u/+7u7v/u7u7/7u7u/+7u7v/u7u7/7u7u/+7u7v/u7u7/7u7u/+7u7v/u7u7/7u7u/+7u
        7v/u7u7/8fHx/01+pP9RjrL/L1p38wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMFt581GO
        sv9NfqT/8vLy/+/v7//v7+//1tLD/5mNWf/n5uH/7+/v/+/v7//v7+//7+/v/+/v7//v7+//7+/v/+/v
        7//v7+//7+/v/+/v7//y8vL/TX6k/1GOsv8wW3nzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAyXHrzUY6y/01+pP/z8/P/8PDw/9fTxP+Fdzf/koZO/6adcf/w8PD/8PDw//Dw8P9rf4b/a3+G/2t/
        hv9rf4b/a3+G/2t/hv9rf4b/8PDw//Pz8/9NfqT/UY6y/zJcevMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAADNefPNRjrL/TX6k//T09P/x8fH/u7SU/9XRwP/t7Or/lotV/7SsiP/x8fH/8fHx//Hx
        8f/x8fH/8fHx//Hx8f/x8fH/8fHx//Hx8f/x8fH/9PT0/01+pP9RjrL/M1588wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAANF9981GOsv9NfqT/9fX1//Ly8v/y8vL/8vLy//Ly8v/o5+L/mIxX//Ly
        8v/y8vL/8vLy//Ly8v/y8vL/8vLy//Ly8v/y8vL/8vLy//Ly8v/19fX/TX6k/1GOsv80X33zAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2YX/zUY6y/01+pP/19fX/8/Pz//Pz8//z8/P/8/Pz//Pz
        8//r6uX/8/Pz//Pz8//z8/P/8/Pz//Pz8//z8/P/8/Pz//Pz8//z8/P/8/Pz//X19f9NfqT/UY6y/zZh
        f/MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADdigPNRjrL/TX6k//b29v/09PT/9PT0//T0
        9P/09PT/9PT0//T09P/09PT/9PT0//T09P/09PT/9PT0//T09P/09PT/9PT0//T09P/09PT/9vb2/01+
        pP9RjrL/N2KA8wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOGOC81GOsv9NfqT/9/f3//X1
        9f/19fX/2tfI/5qPW//t7Of/9fX1//X19f/19fX/a3+G/2t/hv9rf4b/a3+G/2t/hv9rf4b/a3+G//X1
        9f/39/f/TX6k/1GOsv84Y4LzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA5ZYPzUY6y/01+
        pP/39/f/9fX1/9rXyP+Fdzf/k4dP/6iecv/19fX/9fX1//X19f/19fX/9fX1//X19f/19fX/9fX1//X1
        9f/19fX/9fX1//f39/9NfqT/UY6y/zllg/MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADtm
        hfNRjrL/TX6k//j4+P/29vb/vraW/9jVxP/y8e//l4xW/7avi//29vb/9vb2/2t/hv9rf4b/a3+G/2t/
        hv9rf4b/a3+G/2t/hv/29vb/+Pj4/01+pP9RjrL/O2aF8wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAPGeG81GOsv9NfqT/+fn5//f39//39/f/9/f3//f39//t7Ob/mY1Z//f39//39/f/9/f3//f3
        9//39/f/9/f3//f39//39/f/9/f3//f39//5+fn/TX6k/1GOsv88Z4bzAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAA9aYfzUY6y/01+pP/5+fn/9/f3//f39//39/f/9/f3//f39//u7en/9/f3//f3
        9//39/f/9/f3//f39//39/f/9/f3//f39//39/f/9/f3//n5+f9NfqT/UY6y/z1ph/MAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAD5qiPNRjrL/TX6k//n5+f/4+Pj/+Pj4//j4+P/4+Pj/+Pj4//j4
        +P/4+Pj/+Pj4//j4+P/4+Pj/+Pj4//j4+P/4+Pj/+Pj4//j4+P/4+Pj/+fn5/01+pP9RjrL/PmqI8wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP2uK81GOsv9NfqT/+/v7/+/v7//Z2dn/zs7O/87O
        zv/Ozs7/zs7O/87Ozv/Ozs7/zs7O/87Ozv/Ozs7/zs7O/87Ozv/Ozs7/2dnZ/+/v7//7+/v/TX6k/1GO
        sv8/a4rzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAbIvzUY6y/01+pP/9/f3/maWp/2t/
        hv9rf4b/a3+G/2t/hv9rf4b/a3+G/2t/hv9rf4b/a3+G/2t/hv9rf4b/a3+G/2t/hv9rf4b/maWp//39
        /f9NfqT/UY6y/0Bsi/MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEFtjPNRjrL/TX6k/01+
        pP9ieIL/ytre/7jO0/+4ztP/uM7T/7jO0/+4ztP/uM7T/7jO0/+4ztP/uM7T/7jO0/+4ztP/uM7T/8ra
        3v9ieIL/TX6k/01+pP9RjrL/QW2M8wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQm6N81Sa
        vf9RjrL/UY6y/2J5g//d6ev/0uHk/9Lh5P/O3+L/x9rd/8fa3f/O3+L/zt/i/8fa3f/H2t3/zt/i/9Lh
        5P/S4eT/3enr/2J5g/9RjrL/UY6y/1Savf9Cbo3zAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABCbo3zW7LS/1quz/9ars//Y3uE//b5+v/z9/j/8/f4/+3z9f/e6uz/2Obp/+Hs7v/h7O7/2Obp/97q
        7P/t8/X/8/f4//P3+P/2+fr/Y3uE/1quz/9ars//W7LS/0JujfMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAENvjo9Db47zQ2+O80NvjvNVdIb5YXiB/2F4gf9heIH/YXiB//P4+f/q8/T/YXiB/2F4
        gf/q8/T/8/j5/2F4gf9heIH/YXiB/2F4gf9VdIb5Q2+O80NvjvNDb47zQ2+OjwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABjeICPY3iA8/r8
        /P/4+/v/+Pv7//r8/P9jeIDzY3iAjwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABjeICPY3iA82N4gPNjeIDzY3iA82N4gI8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//////AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AA
        AA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AA
        AA/wAAAP8AAAD/AAAA/wAAAP//AP///4H/8=
</value>
  </data>
</root>